create table "public"."user_group_belongings" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "user_group_id" bigint not null,
    "is_admin" boolean not null default false,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."user_group_belongings" enable row level security;

create table "public"."user_groups" (
    "id" bigint generated by default as identity not null,
    "name" character varying not null
);


alter table "public"."user_groups" enable row level security;

CREATE UNIQUE INDEX user_group_belongings_pkey ON public.user_group_belongings USING btree (id);

CREATE UNIQUE INDEX user_groups_pkey ON public.user_groups USING btree (id);

alter table "public"."user_group_belongings" add constraint "user_group_belongings_pkey" PRIMARY KEY using index "user_group_belongings_pkey";

alter table "public"."user_groups" add constraint "user_groups_pkey" PRIMARY KEY using index "user_groups_pkey";

alter table "public"."user_group_belongings" add constraint "user_group_belongings_user_group_id_fkey" FOREIGN KEY (user_group_id) REFERENCES user_groups(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_group_belongings" validate constraint "user_group_belongings_user_group_id_fkey";

alter table "public"."user_group_belongings" add constraint "user_group_belongings_user_id_fkey1" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."user_group_belongings" validate constraint "user_group_belongings_user_id_fkey1";

grant delete on table "public"."user_group_belongings" to "anon";

grant insert on table "public"."user_group_belongings" to "anon";

grant references on table "public"."user_group_belongings" to "anon";

grant select on table "public"."user_group_belongings" to "anon";

grant trigger on table "public"."user_group_belongings" to "anon";

grant truncate on table "public"."user_group_belongings" to "anon";

grant update on table "public"."user_group_belongings" to "anon";

grant delete on table "public"."user_group_belongings" to "authenticated";

grant insert on table "public"."user_group_belongings" to "authenticated";

grant references on table "public"."user_group_belongings" to "authenticated";

grant select on table "public"."user_group_belongings" to "authenticated";

grant trigger on table "public"."user_group_belongings" to "authenticated";

grant truncate on table "public"."user_group_belongings" to "authenticated";

grant update on table "public"."user_group_belongings" to "authenticated";

grant delete on table "public"."user_group_belongings" to "service_role";

grant insert on table "public"."user_group_belongings" to "service_role";

grant references on table "public"."user_group_belongings" to "service_role";

grant select on table "public"."user_group_belongings" to "service_role";

grant trigger on table "public"."user_group_belongings" to "service_role";

grant truncate on table "public"."user_group_belongings" to "service_role";

grant update on table "public"."user_group_belongings" to "service_role";

grant delete on table "public"."user_groups" to "anon";

grant insert on table "public"."user_groups" to "anon";

grant references on table "public"."user_groups" to "anon";

grant select on table "public"."user_groups" to "anon";

grant trigger on table "public"."user_groups" to "anon";

grant truncate on table "public"."user_groups" to "anon";

grant update on table "public"."user_groups" to "anon";

grant delete on table "public"."user_groups" to "authenticated";

grant insert on table "public"."user_groups" to "authenticated";

grant references on table "public"."user_groups" to "authenticated";

grant select on table "public"."user_groups" to "authenticated";

grant trigger on table "public"."user_groups" to "authenticated";

grant truncate on table "public"."user_groups" to "authenticated";

grant update on table "public"."user_groups" to "authenticated";

grant delete on table "public"."user_groups" to "service_role";

grant insert on table "public"."user_groups" to "service_role";

grant references on table "public"."user_groups" to "service_role";

grant select on table "public"."user_groups" to "service_role";

grant trigger on table "public"."user_groups" to "service_role";

grant truncate on table "public"."user_groups" to "service_role";

grant update on table "public"."user_groups" to "service_role";

create policy "Enable read access for all users"
on "public"."user_group_belongings"
as permissive
for select
to public
using (true);


create policy "Enable read access for belonging users"
on "public"."user_groups"
as permissive
for select
to public
using ((auth.uid() IN ( SELECT user_group_belongings.user_id
   FROM user_group_belongings
  WHERE (user_group_belongings.user_group_id = user_groups.id))));



